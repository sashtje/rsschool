{"version":3,"file":"main.js","mappings":"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AK0F,UAAgC9F,UAAW,EAChDI,KAAK2F,WAAiC/F,UAAW,EAElD,MAAMkB,EAAQ,IAAIC,MAAM,mBAAoB,CAAEC,SAAS,IACvDhB,KAAK0F,UAAUxE,cAAcJ,IAG/B,KAAA8E,mBAAqB,KAClB5F,KAAK0F,UAAgC9F,UAAW,EAChDI,KAAK2F,WAAiC/F,UAAW,EAElD,MAAMkB,EAAQ,IAAIC,MAAM,oBAAqB,CAAEC,SAAS,IACxDhB,KAAK2F,WAAWzE,cAAcJ,IA1B9Bd,KAAK6F,OAAStG,SAASC,cAAc,UACrCQ,KAAK6F,OAAOpG,UAAY,SAExB,MAAMqG,EAAMvG,SAASC,cAAc,OACnCsG,EAAIrG,UAAY,gBAEhBO,KAAK0F,UAAY,EAAUzG,EAAWmC,QAAS,YAAapB,KAAKyF,mBAAmB,GACpFzF,KAAK2F,WAAa,EAAU1G,EAAWmC,QAAS,aAAcpB,KAAK4F,oBAAoB,GAEvFE,EAAIvE,OAAOvB,KAAK0F,UAAW1F,KAAK2F,YAChC3F,KAAK6F,OAAOtE,OAAOuE,KCiCvB,EArD6B,CAC3B,OACA,aACA,SACA,eACA,OACA,OACA,UACA,OACA,MACA,MACA,QACA,SACA,UACA,WACA,QACA,MACA,SACA,OACA,QACA,OACA,QACA,QACA,MACA,UACA,MACA,QACA,UACA,SACA,OACA,SACA,SACA,UACA,UACA,UACA,QACA,QACA,SACA,SACA,QACA,SACA,MACA,QACA,MACA,QACA,MACA,OACA,MACA,YACA,WACA,UCGF,EArD6B,CAC3B,WACA,IACA,IACA,IACA,IACA,aACA,KACA,KACA,KACA,KACA,MACA,MACA,UACA,OACA,aACA,UACA,SACA,MACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,QACA,SACA,UACA,KACA,KACA,KACA,KACA,KACA,UACA,QACA,OACA,UACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,WACA,YACA,MACA,UACA,Q,0SCpCF,MAAMC,EAAO,wBACPC,EAAS,GAAGD,WACZE,EAAS,GAAGF,WACZG,EAAU,GAAGH,YAENI,EAAU,CAAOC,EAAcC,IAAqC,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","sources":["webpack://christmas-task/./src/components/btn.ts","webpack://christmas-task/./src/components/server-notification.ts","webpack://christmas-task/./src/pages/start-page.ts","webpack://christmas-task/./src/data/data.ts","webpack://christmas-task/./src/components/car.ts","webpack://christmas-task/./src/components/header.ts","webpack://christmas-task/./src/data/brands-cars.ts","webpack://christmas-task/./src/data/models-cars.ts","webpack://christmas-task/./src/api/api.ts","webpack://christmas-task/./src/components/notification.ts","webpack://christmas-task/./src/pages/garage-page.ts","webpack://christmas-task/./src/pages/winners-page.ts","webpack://christmas-task/./src/index.ts","webpack://christmas-task/./src/app/app.ts"],"sourcesContent":["export enum BtnClasses {\n  Btn = 'btn',\n  MainBtn = 'btn btn_is_main-btn',\n  EngineStartBtn = 'btn btn_style_engine btn-start',\n  EngineStopBtn = 'btn btn_style_engine btn-stop',\n  SelectBtn = 'btn btn-select',\n  RemoveBtn = 'btn btn-remove',\n}\n\nconst getNewBtn = (\n  classStr: string,\n  content: string,\n  handleClick: (() => void) | null,\n  disabledBtn: boolean,\n): HTMLElement => {\n  const btn = document.createElement('button');\n\n  btn.className = classStr;\n  btn.textContent = content;\n  if (handleClick) {\n    btn.addEventListener('click', handleClick);\n  }\n  btn.disabled = disabledBtn;\n\n  return btn;\n};\n\nexport default getNewBtn;\n","export enum ServNotClasses {\n  IsHidden = 'server-notification_is_hidden',\n  IsShown = 'server-notification_is_shown',\n}\n\nclass ServerNotification {\n  elem: HTMLElement;\n\n  constructor() {\n    this.elem = document.createElement('div');\n    this.elem.className = `server-notification ${ServNotClasses.IsHidden}`;\n    this.elem.innerHTML = this.getInnerLayout();\n\n    this.elem.addEventListener('click', this.closeServerNotification);\n  }\n\n  getInnerLayout(): string {\n    return `\n    <div class=\"server-notification__message\">\n      <p>Нет связи с сервером.</p>\n      <p>Проверьте включен ли сервер и попробуйте повторить желаемое действие.</p>\n      <p>Чтобы закрыть это сообщение, нажмите в любом месте экрана.</p>\n    </div>`;\n  }\n\n  showServerNotification() {\n    this.elem.classList.remove(ServNotClasses.IsHidden);\n    this.elem.classList.add(ServNotClasses.IsShown);\n  }\n\n  closeServerNotification = (): void => {\n    this.elem.addEventListener('transitionend', this.hideServerNotification);\n    this.elem.classList.remove(ServNotClasses.IsShown);\n  };\n\n  hideServerNotification = (): void => {\n    this.elem.classList.add(ServNotClasses.IsHidden);\n  };\n}\n\nconst serverNotification = new ServerNotification();\n\nexport default serverNotification;\n","import getNewBtn, { BtnClasses } from '../components/btn';\nimport serverNotification from '../components/server-notification';\n\nexport default class StartPage {\n  rootElem: HTMLElement;\n\n  btnStart?: HTMLElement;\n\n  constructor(rootElem: HTMLElement) {\n    this.rootElem = rootElem;\n  }\n\n  showPage(): void {\n    this.btnStart = getNewBtn(BtnClasses.MainBtn, 'Start', this.handleClickStart, false);\n\n    const pageLayout = this.getPageLayout(this.btnStart);\n    this.rootElem.append(pageLayout);\n    this.rootElem.append(serverNotification.elem);\n  }\n\n  handleClickStart = (): void => {\n    const event = new Event('init-garage-page', { bubbles: true });\n    (this.btnStart as HTMLElement).dispatchEvent(event);\n  };\n\n  getPageLayout(btn: HTMLElement): HTMLElement {\n    const main = document.createElement('main');\n    main.className = 'start-page';\n\n    const pageTitle = document.createElement('h1');\n    pageTitle.className = 'start-page__title';\n    pageTitle.textContent = 'Async Race';\n\n    main.append(pageTitle);\n    main.append(btn);\n\n    return main;\n  }\n}\n","export interface ICar {\n  name: string;\n  color: string;\n  id: number;\n}\n\nexport interface IGetCars {\n  total: number;\n  cars: ICar[];\n}\n\nexport interface IWinner {\n  wins: number;\n  time: number;\n  id: number;\n}\n\nexport interface IGetWinners {\n  total: number;\n  winners: IWinner[];\n}\n\nexport interface IEngineAnswer {\n  velocity: number;\n  distance: number;\n}\n\nexport interface ISetCar {\n  inputName: HTMLElement;\n  inputColor: HTMLElement;\n  btn: HTMLElement;\n}\n\nexport interface ISetBtns {\n  btnRace: HTMLElement;\n  btnReset: HTMLElement;\n  btnGenerate: HTMLElement;\n}\n\nexport enum StatusEngine {\n  Started = 'started',\n  Stopped = 'stopped',\n  Drive = 'drive',\n}\n\nexport enum Sort {\n  Id = 'id',\n  Wins = 'wins',\n  Time = 'time',\n}\n\nexport enum OrderSort {\n  Asc = 'ASC',\n  Desc = 'DESC',\n}\n\nexport const MAX_CARS_PER_PAGE = 7;\nexport const MAX_WINNERS_PER_PAGE = 10;\n\nexport const START_PAGE = 1;\nexport const START_COLOR = '#000000';\nexport const NO_SELECT = -1;\n\nexport const RANGE_TOO_LIGHT_COLOR = 25;\n\nexport const NUMBER_IN_BUNDLE = 100;\nexport const MAX_NUMBER_RACE = 1000000;\nexport const ONE_SECOND = 1000;\n","import getNewBtn, { BtnClasses } from './btn';\nimport { RANGE_TOO_LIGHT_COLOR } from '../data/data';\n\nexport default class Car {\n  car: HTMLElement;\n\n  id: number;\n\n  name: string;\n\n  color: string;\n\n  nameCarEl?: HTMLElement;\n\n  btnSelect?: HTMLElement;\n\n  btnRemove?: HTMLElement;\n\n  btnStartEngine?: HTMLElement;\n\n  btnStopEngine?: HTMLElement;\n\n  carPictureEl?: HTMLElement;\n\n  carTrackEl?: HTMLElement;\n\n  animation?: Animation;\n\n  time?: number;\n\n  numberStart: number;\n\n  isStopped: boolean;\n\n  constructor(id: number, name: string, color: string) {\n    this.car = document.createElement('div');\n    this.car.className = 'car';\n\n    this.id = id;\n    this.name = name;\n    this.color = color;\n    this.numberStart = 0;\n    this.isStopped = true;\n\n    const carControls = this.getCarControls();\n    this.setCarTrack();\n\n    this.car.append(carControls, this.carTrackEl as HTMLElement);\n  }\n\n  getCarControls(): HTMLElement {\n    const carControls = document.createElement('div');\n    carControls.className = 'car__controls';\n\n    const controlPanel = document.createElement('div');\n    controlPanel.className = 'control-panel';\n\n    this.btnSelect = getNewBtn(BtnClasses.SelectBtn, 'Select', null, false);\n    this.btnRemove = getNewBtn(BtnClasses.RemoveBtn, 'Remove', null, false);\n\n    controlPanel.append(this.btnSelect, this.btnRemove);\n\n    this.nameCarEl = document.createElement('h2');\n    this.nameCarEl.className = 'car__name';\n    this.nameCarEl.textContent = this.name;\n\n    carControls.append(controlPanel, this.nameCarEl);\n\n    return carControls;\n  }\n\n  setCarTrack(): void {\n    this.carTrackEl = document.createElement('div');\n    this.setColorForCarTrackEl();\n\n    const carEngineBtnsBlock = this.getCarEngineBtnsBlock();\n    this.carPictureEl = document.createElement('div');\n    this.carPictureEl.className = 'car__picture';\n    this.changeCarPictureColor();\n\n    const flagPicture = document.createElement('div');\n    flagPicture.className = 'finish-flag';\n    flagPicture.innerHTML = this.getFlagPicture();\n\n    this.carTrackEl.append(carEngineBtnsBlock, this.carPictureEl, flagPicture);\n  }\n\n  static isCarColorTooLight(color: string): boolean {\n    if (color.length !== 7) return false;\n\n    const r = 255 - parseInt(color.slice(1, 3), 16);\n    const g = 255 - parseInt(color.slice(3, 5), 16);\n    const b = 255 - parseInt(color.slice(5), 16);\n\n    if (r < RANGE_TOO_LIGHT_COLOR && g < RANGE_TOO_LIGHT_COLOR && b < RANGE_TOO_LIGHT_COLOR) {\n      return true;\n    }\n\n    return false;\n  }\n\n  setColorForCarTrackEl(): void {\n    if (Car.isCarColorTooLight(this.color)) {\n      (this.carTrackEl as HTMLElement).className = 'car__track car__track_is_dark';\n    } else {\n      (this.carTrackEl as HTMLElement).className = 'car__track';\n    }\n  }\n\n  getCarEngineBtnsBlock(): HTMLElement {\n    const carEngineBtnsBlock = document.createElement('div');\n    carEngineBtnsBlock.className = 'car__engine-btns control-panel';\n\n    this.btnStartEngine = getNewBtn(BtnClasses.EngineStartBtn, 'A', null, false);\n    this.btnStopEngine = getNewBtn(BtnClasses.EngineStopBtn, 'B', null, true);\n\n    carEngineBtnsBlock.append(this.btnStartEngine, this.btnStopEngine);\n\n    return carEngineBtnsBlock;\n  }\n\n  changeCarPictureColor(): void {\n    this.setColorForCarTrackEl();\n    (this.carPictureEl as HTMLElement).innerHTML = Car.getCarPicture(this.color);\n  }\n\n  changeNameCar(): void {\n    (this.nameCarEl as HTMLElement).textContent = this.name;\n  }\n\n  static getCarPicture(color: string): string {\n    return `<svg xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"1280.000000pt\" height=\"640.000000pt\" viewBox=\"0 0 1280.000000 640.000000\"\n              preserveAspectRatio=\"xMidYMid meet\">\n              <g fill=\"${color}\" transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\">\n              <path d=\"M3525 5341 c-72 -18 -79 -28 -90 -121 -4 -30 -11 -62 -16 -71 -4 -9\n              -97 -51 -206 -94 -774 -304 -1348 -540 -1603 -661 -163 -77 -222 -91 -421\n              -104 -85 -5 -170 -14 -189 -20 -101 -32 -362 -58 -620 -63 l-115 -2 -47 -80\n              c-47 -78 -47 -80 -29 -100 34 -36 35 -77 5 -177 -30 -99 -34 -178 -19 -370 5\n              -67 4 -88 -6 -88 -29 0 -83 -56 -110 -114 -50 -106 -74 -343 -48 -467 13 -58\n              13 -62 3 -159 -5 -54 16 -238 28 -244 2 -1 29 -20 61 -41 73 -49 123 -103 132\n              -143 17 -79 167 -155 355 -181 104 -15 969 -97 1087 -104 l32 -2 5 160 c7 230\n              50 394 146 559 281 479 917 673 1405 429 316 -159 530 -424 598 -742 22 -106\n              29 -365 13 -519 l-8 -82 3002 0 c2855 0 3002 1 2995 18 -33 87 -56 325 -45\n              461 28 320 177 567 459 759 399 273 847 282 1243 24 239 -157 397 -392 460\n              -687 18 -84 15 -341 -5 -430 -8 -38 -14 -71 -12 -73 7 -8 386 20 478 34 180\n              28 253 65 304 152 24 41 28 57 28 127 -1 44 -9 117 -20 163 -18 79 -18 88 -2\n              190 31 199 40 306 41 497 1 176 -1 195 -23 260 -46 135 -103 190 -283 274\n              -222 104 -633 220 -1168 330 -523 108 -1524 210 -2054 211 l-229 0 -236 139\n              c-813 477 -1593 884 -1852 966 -498 157 -1598 195 -2892 100 l-188 -14 -47 30\n              c-92 58 -223 89 -297 70z m1912 -311 c13 -45 58 -305 88 -515 33 -226 74 -539\n              71 -542 -7 -7 -1672 40 -2054 58 -357 16 -464 56 -573 215 -62 91 -87 225 -59\n              326 12 40 56 74 192 148 369 198 799 289 1618 340 246 15 290 16 510 16 l194\n              -1 13 -45z m649 10 c383 -36 717 -86 934 -139 210 -52 451 -163 720 -332 141\n              -88 379 -259 380 -271 0 -5 -14 -8 -32 -8 -48 0 -114 -37 -140 -78 -24 -39\n              -30 -113 -15 -189 l9 -43 -904 0 -904 0 -176 540 -175 540 47 0 c25 0 141 -9\n              256 -20z\"/>\n              <path d=\"M2617 3125 c-431 -82 -774 -440 -838 -875 -17 -117 -7 -292 24 -410\n              113 -436 497 -751 947 -777 507 -29 959 313 1076 813 28 117 26 348 -4 467\n              -94 378 -383 670 -760 768 -105 27 -336 34 -445 14z m378 -310 c84 -21 209\n              -85 280 -142 116 -94 210 -242 251 -393 23 -87 24 -260 0 -355 -58 -237 -242\n              -439 -473 -519 -531 -186 -1074 277 -969 828 30 152 94 274 206 386 111 110\n              237 178 385 206 84 16 235 11 320 -11z\"/>\n              <path d=\"M2918 2568 c2 -90 7 -167 12 -172 17 -17 108 58 201 166 l51 57 -48\n              31 c-52 33 -131 65 -185 75 l-34 6 3 -163z\"/>\n              <path d=\"M2591 2700 c-62 -22 -167 -82 -164 -94 3 -13 237 -216 249 -216 7 0\n              15 7 18 16 8 20 8 127 -1 232 -7 95 -8 96 -102 62z\"/>\n              <path d=\"M3209 2355 c-57 -64 -105 -123 -107 -131 -6 -25 46 -35 157 -29 58 3\n              121 8 139 11 33 5 34 6 27 42 -7 44 -64 167 -92 201 l-19 24 -105 -118z\"/>\n              <path d=\"M2260 2409 c-31 -44 -68 -133 -77 -186 l-6 -33 155 0 c165 0 201 9\n              181 44 -13 24 -204 216 -214 216 -5 0 -22 -18 -39 -41z\"/>\n              <path d=\"M2786 2354 c-36 -35 0 -87 44 -64 26 14 26 56 1 70 -25 13 -27 13\n              -45 -6z\"/>\n              <path d=\"M2751 2186 c-57 -32 -68 -111 -22 -157 43 -42 101 -43 143 -1 42 42\n              41 100 -1 143 -33 32 -78 38 -120 15z\"/>\n              <path d=\"M2560 2136 c-19 -23 -8 -61 18 -64 44 -7 67 32 36 62 -19 20 -38 20\n              -54 2z\"/>\n              <path d=\"M3002 2124 c-27 -19 -28 -36 -3 -58 25 -23 61 -6 61 29 0 33 -30 49\n              -58 29z\"/>\n              <path d=\"M2245 1993 c-77 -6 -76 -5 -59 -65 16 -55 61 -146 92 -186 l18 -23\n              103 122 c57 67 104 129 105 138 1 14 -14 16 -104 17 -58 0 -127 -1 -155 -3z\"/>\n              <path d=\"M3165 1981 c-44 -4 -61 -10 -63 -22 -3 -16 210 -229 228 -229 22 0\n              86 141 105 228 l7 32 -109 -2 c-59 -1 -135 -4 -168 -7z\"/>\n              <path d=\"M2776 1914 c-19 -18 -19 -20 -6 -45 6 -11 21 -19 35 -19 20 0 45 24\n              45 44 0 10 -32 36 -45 36 -7 0 -21 -7 -29 -16z\"/>\n              <path d=\"M2589 1743 c-86 -90 -139 -151 -139 -162 0 -25 179 -101 236 -101\n              l27 0 -7 143 c-9 166 -13 187 -35 187 -9 0 -46 -30 -82 -67z\"/>\n              <path d=\"M2936 1801 c-6 -10 -24 -168 -29 -258 -3 -60 -2 -63 19 -63 79 0 262\n              68 248 92 -5 7 -53 64 -108 126 -93 105 -117 124 -130 103z\"/>\n              <path d=\"M10723 3125 c-318 -58 -597 -266 -743 -555 -223 -441 -98 -996 289\n              -1288 112 -84 188 -125 311 -166 274 -91 545 -70 802 61 552 282 735 983 392\n              1500 -225 339 -651 521 -1051 448z m385 -315 c348 -98 579 -443 532 -796 -67\n              -508 -596 -796 -1055 -574 -239 116 -396 352 -412 620 -20 335 192 640 516\n              745 122 40 289 42 419 5z\"/>\n              <path d=\"M11017 2568 c3 -90 9 -167 14 -172 13 -14 53 18 155 122 l95 97 -23\n              18 c-50 40 -189 97 -235 97 -10 0 -11 -33 -6 -162z\"/>\n              <path d=\"M10705 2706 c-50 -16 -133 -58 -163 -82 l-23 -19 121 -107 c67 -60\n              128 -108 135 -108 23 0 27 39 20 186 -8 162 -4 157 -90 130z\"/>\n              <path d=\"M11307 2354 c-59 -65 -107 -126 -107 -136 0 -11 11 -18 38 -22 44 -7\n              278 7 289 17 15 16 -51 183 -94 236 l-19 24 -107 -119z\"/>\n              <path d=\"M10362 2413 c-39 -62 -70 -134 -78 -184 l-7 -39 152 0 c86 0 161 5\n              172 10 17 10 18 13 5 38 -8 15 -59 71 -114 125 l-99 99 -31 -49z\"/>\n              <path d=\"M10888 2359 c-24 -14 -23 -56 2 -69 44 -23 80 29 44 64 -18 19 -23\n              19 -46 5z\"/>\n              <path d=\"M10851 2187 c-49 -29 -66 -101 -35 -146 9 -13 32 -29 50 -37 29 -12\n              39 -12 68 0 99 41 85 180 -19 192 -24 3 -50 -1 -64 -9z\"/>\n              <path d=\"M10660 2136 c-19 -23 -8 -61 18 -64 44 -7 67 32 36 62 -19 20 -38 20\n              -54 2z\"/>\n              <path d=\"M11096 2124 c-9 -8 -16 -22 -16 -29 0 -13 26 -45 36 -45 20 0 44 25\n              44 45 0 14 -8 29 -19 35 -25 13 -27 13 -45 -6z\"/>\n              <path d=\"M10335 1991 c-60 -6 -60 -6 -57 -36 9 -69 104 -248 122 -229 57 61\n              210 250 207 258 -4 12 -176 17 -272 7z\"/>\n              <path d=\"M11267 1983 c-68 -5 -79 -19 -47 -60 23 -31 200 -193 210 -193 3 0\n              20 24 37 53 29 48 52 111 67 180 l6 27 -107 -2 c-60 -1 -134 -3 -166 -5z\"/>\n              <path d=\"M10870 1910 c-16 -31 4 -62 38 -58 21 2 28 9 30 32 5 45 -47 65 -68\n              26z\"/>\n              <path d=\"M10651 1703 c-56 -59 -101 -113 -101 -120 0 -28 172 -103 237 -103\n              l26 0 -7 123 c-10 179 -15 207 -36 207 -10 0 -63 -48 -119 -107z\"/>\n              <path d=\"M11035 1801 c-7 -12 -23 -144 -29 -243 -4 -77 -4 -78 19 -78 45 0\n              130 22 193 51 l64 29 -19 23 c-65 82 -198 227 -209 227 -7 0 -15 -4 -19 -9z\"/>\n              </g>\n              </svg>`;\n  }\n\n  getFlagPicture(): string {\n    return '<svg data-name=\"Layer 1\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><title/><path d=\"M448.24,140.92l-.77-.77c-19.39-19.2-39.75-31.51-62.15-37.62v0l-1.8-.47h0l-2.06-.53v0c-17.63-4.21-36.52-4.7-59-1.51v0l-2.73.42h0l-1.43.21v0c-15.69,2.48-31.56,6.39-46.92,10.19-4.94,1.22-9.88,2.44-14.81,3.62h0c-20,4.76-41.36,9.16-62.57,9.16h0c-21.56,0-40.81-4.58-58.74-14l3.58-20.32A8,8,0,1,0,123,86.54L63.75,422.68A8,8,0,0,0,70.24,432a7.34,7.34,0,0,0,1.39.13,8,8,0,0,0,7.87-6.62l24.33-137.95c17.08,15.13,35,25.12,54.48,30.43v0l1.79.46h0l2.08.53v0a135,135,0,0,0,31.66,3.59,194.88,194.88,0,0,0,27.36-2.07v0l2.73-.41h0l1.42-.21v0c15.69-2.48,31.56-6.39,46.92-10.19,4.94-1.22,9.88-2.44,14.81-3.61h0c20-4.76,41.35-9.16,62.57-9.16h0c22.89,0,43.19,5.16,62.05,15.76l2.43,1.37.52-2.74c3.74-19.76,7.48-39.28,11.11-58l0-.13c3.72-19.19,7.45-38.14,11.08-56.32l0-.15c3.72-18.66,7.45-37,11.08-54.66ZM348,292.87c-20,.22-40.05,4.15-58.88,8.57,0-.1,0-.19,0-.28q5.19-31.52,10.36-62.94c16.48-3.58,37.66-7.31,58.93-6.05-.22,1.29-.45,2.59-.67,3.89l-.42,2.39q-.48,2.81-1,5.62l-.36,2.09C353.39,261.45,350.7,277.09,348,292.87Zm-161.71-111,.84-4.88c.16-.88.31-1.75.46-2.64.42-2.43.84-4.88,1.26-7.33a1.06,1.06,0,0,0,0-.19c2.22-12.88,4.47-26,6.73-39.19,20-.21,40-4.15,58.88-8.56l0,.15q-5.19,31.58-10.38,63.06c-16.49,3.58-37.66,7.31-58.93,6.05l.48-2.79C185.87,184.28,186.08,183.06,186.29,181.83Zm109.73,53h0c-8.25,1.84-16.6,3.89-24.69,5.89-11.2,2.77-22.75,5.62-34.14,7.89q5.2-31.44,10.41-63h0c8.25-1.84,16.6-3.89,24.69-5.89,11.2-2.77,22.75-5.62,34.15-7.89q-5.22,31.44-10.42,63ZM180.47,192c-.13.75-.25,1.49-.38,2.24-.28,1.58-.55,3.17-.83,4.76-.17,1-.33,1.91-.5,2.87-.29,1.69-.59,3.39-.88,5.09l-.21,1.18c-2.55,14.68-5.09,29.2-7.58,43.38-20-3.54-38.17-11.82-55.46-25.24l9.42-53.45A125.09,125.09,0,0,0,180.47,192Zm242,57.54a125.52,125.52,0,0,0-59.3-21c.11-.63.21-1.25.32-1.88q.48-2.72.94-5.41l.27-1.53c.36-2.1.73-4.21,1.09-6.3l.06-.34q1.44-8.26,2.86-16.43.54-3,1.06-6.06l0-.1c.45-2.56.89-5.11,1.34-7.65.05-.3.1-.6.16-.9l1.23-7,.08-.43c.32-1.83.64-3.64.95-5.45,21.41,3.8,40.81,13.05,59.22,28.24C429.37,214.13,425.91,231.71,422.45,249.52ZM380.73,105.46q-1.17,6.5-2.34,13.12l-.08.43q-2.06,11.51-4.13,23.29c-.05.24-.09.49-.13.74q-1.87,10.58-3.76,21.3h0v0c-17.22-2.51-36.09-1.73-59,2.43q1.9-11.47,3.8-22.93l1.38-8.27c.39-2.37.78-4.73,1.18-7.1q2-12.18,4.05-24.34C344.37,100.82,363.21,101.24,380.73,105.46ZM162.89,315q1.19-6.6,2.38-13.3l0-.27c2.65-14.86,5.34-30,8-45.34h.13c2,.3,4.08.54,6.16.75l.42,0c4.45.42,9,.65,13.74.65a215.59,215.59,0,0,0,38.51-3.87q-.93,5.56-1.85,11.13-4.27,25.82-8.56,51.52C199.25,319.65,180.41,319.23,162.89,315Z\"/></svg>';\n  }\n\n  setAnimation(endPos: string): void {\n    this.animation = this.carPictureEl?.animate(\n      [\n        {\n          transform: 'translateX(0)',\n        },\n        {\n          transform: `translateX(${endPos})`,\n        },\n      ],\n      {\n        duration: this.time,\n        fill: 'forwards',\n      },\n    );\n  }\n\n  static getAnimationEndPos(car: Car): string {\n    const bodyWidth = document.body.offsetWidth;\n    const sizeCar = car.carPictureEl?.getBoundingClientRect();\n    const left = sizeCar?.left as number;\n    const widthCar = sizeCar?.width as number;\n    const bodyPadding = 10;\n    const distanceAnimation = bodyWidth - widthCar - left - bodyPadding;\n\n    return `${distanceAnimation}px`;\n  }\n\n  setCarTime(time: number): void {\n    this.time = time;\n  }\n\n  setIsStopped(value: boolean): void {\n    this.isStopped = value;\n  }\n\n  setNumberStart(value: number): void {\n    this.numberStart = value;\n  }\n}\n","import getNewBtn, { BtnClasses } from '../components/btn';\n\nclass Header {\n  header: HTMLElement;\n\n  btnGarage: HTMLElement;\n\n  btnWinners: HTMLElement;\n\n  constructor() {\n    this.header = document.createElement('header');\n    this.header.className = 'header';\n\n    const nav = document.createElement('nav');\n    nav.className = 'control-panel';\n\n    this.btnGarage = getNewBtn(BtnClasses.MainBtn, 'To garage', this.handleClickGarage, true);\n    this.btnWinners = getNewBtn(BtnClasses.MainBtn, 'To winners', this.handleClickWinners, false);\n\n    nav.append(this.btnGarage, this.btnWinners);\n    this.header.append(nav);\n  }\n\n  handleClickGarage = (): void => {\n    (this.btnGarage as HTMLButtonElement).disabled = true;\n    (this.btnWinners as HTMLButtonElement).disabled = false;\n\n    const event = new Event('show-garage-page', { bubbles: true });\n    this.btnGarage.dispatchEvent(event);\n  };\n\n  handleClickWinners = (): void => {\n    (this.btnGarage as HTMLButtonElement).disabled = false;\n    (this.btnWinners as HTMLButtonElement).disabled = true;\n\n    const event = new Event('show-winners-page', { bubbles: true });\n    this.btnWinners.dispatchEvent(event);\n  };\n}\n\nconst header = new Header();\n\nexport default header;\n","const brandsCars: string[] = [\n  'Audi',\n  'Alfa Romeo',\n  'Alpina',\n  'Aston Martin',\n  'Axon',\n  'Ford',\n  'Ferrari',\n  'Fiat',\n  'GAZ',\n  'GMC',\n  'Honda',\n  'Hummer',\n  'Hyundai',\n  'Infiniti',\n  'Isuzu',\n  'JAC',\n  'Jaguar',\n  'Jeep',\n  'Kamaz',\n  'Lada',\n  'Lexus',\n  'Lotus',\n  'MAN',\n  'Maybach',\n  'MAZ',\n  'Mazda',\n  'McLaren',\n  'Nissan',\n  'Opel',\n  'Paccar',\n  'Pagani',\n  'Pontiac',\n  'Porsche',\n  'Renault',\n  'Škoda',\n  'Smart',\n  'Subaru',\n  'Suzuki',\n  'Tesla',\n  'Toyota',\n  'UAZ',\n  'Volvo',\n  'ZAZ',\n  'XPeng',\n  'TVR',\n  'Saab',\n  'RAM',\n  'Chevrolet',\n  'Mazzanti',\n  'Daewoo',\n];\n\nexport default brandsCars;\n","const modelsCars: string[] = [\n  'Roadster',\n  'S',\n  'X',\n  '3',\n  'Y',\n  'Cybertruck',\n  'X5',\n  'X7',\n  'X3',\n  'X6',\n  'GT4',\n  'FXX',\n  '599 GTO',\n  'Enzo',\n  '458 Italia',\n  '250 GTO',\n  'Priora',\n  '4x4',\n  'Rio',\n  'Focus',\n  'Kalina',\n  'Vesta',\n  'Spark',\n  'Lacetti',\n  'Nexia',\n  'Matiz',\n  'Cobalt',\n  'Captiva',\n  'A7',\n  'A5',\n  'A3',\n  'A8',\n  'TT',\n  'Corolla',\n  'Camry',\n  'RAV4',\n  'Impreza',\n  'WRX',\n  'ES',\n  'LS',\n  'RX',\n  'GX',\n  'LX',\n  'GS',\n  'LC500',\n  'Gallardo',\n  'Aventador',\n  '911',\n  'Cayenne',\n  'FX37',\n];\n\nexport default modelsCars;\n","import {\n  IGetCars,\n  IGetWinners,\n  StatusEngine,\n  Sort,\n  OrderSort,\n  ICar,\n  IWinner,\n  IEngineAnswer,\n  NUMBER_IN_BUNDLE,\n} from '../data/data';\nimport brandsCars from '../data/brands-cars';\nimport modelsCars from '../data/models-cars';\n\nconst base = 'http://127.0.0.1:3000';\nconst garage = `${base}/garage`;\nconst engine = `${base}/engine`;\nconst winners = `${base}/winners`;\n\nexport const getCars = async (page: number, limit: number): Promise<IGetCars> => {\n  const resp = await fetch(`${garage}?_page=${page}&_limit=${limit}`);\n  const totalCars = resp.headers.get('X-Total-Count') as string;\n  const arrCars = (await resp.json()) as ICar[];\n\n  return { total: +totalCars, cars: arrCars };\n};\n\nexport const getCar = async (id: number): Promise<ICar> => {\n  const resp = await fetch(`${garage}/${id}`);\n  const car = (await resp.json()) as ICar;\n\n  return car;\n};\n\nexport const createCar = async (name: string, color: string): Promise<ICar> => {\n  const data = {\n    name,\n    color,\n  };\n\n  const resp = await fetch(`${garage}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n  const car = (await resp.json()) as ICar;\n\n  return car;\n};\n\n/* functions for create bundle cars */\nfunction getRandomIntInclusive(min: number, max: number) {\n  const minInt = Math.ceil(min);\n  const maxInt = Math.floor(max);\n  return Math.floor(Math.random() * (maxInt - minInt + 1)) + minInt;\n}\n\nfunction generateRandomColor(): string {\n  const r = getRandomIntInclusive(0, 255).toString(16).padStart(2, '0');\n  const g = getRandomIntInclusive(0, 255).toString(16).padStart(2, '0');\n  const b = getRandomIntInclusive(0, 255).toString(16).padStart(2, '0');\n\n  return `#${r}${g}${b}`;\n}\n\nfunction generateRandomName(): string {\n  const brandInd = getRandomIntInclusive(0, brandsCars.length - 1);\n  const modelInd = getRandomIntInclusive(0, modelsCars.length - 1);\n\n  return `${brandsCars[brandInd]} ${modelsCars[modelInd]}`;\n}\n\nexport const createBundleCars = async (): Promise<void> => {\n  const promises = [];\n  for (let i = 0; i < NUMBER_IN_BUNDLE; i += 1) {\n    const newCarName = generateRandomName();\n    const newCarColor = generateRandomColor();\n    promises.push(createCar(newCarName, newCarColor));\n  }\n\n  await Promise.all(promises);\n};\n\nexport const deleteCar = async (id: number): Promise<void> => {\n  const resp = await fetch(`${garage}/${id}`, {\n    method: 'DELETE',\n  });\n  await resp.json();\n};\n\nexport const updateCar = async (id: number, name: string, color: string): Promise<ICar> => {\n  const data = {\n    name,\n    color,\n  };\n\n  const resp = await fetch(`${garage}/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n  const car = (await resp.json()) as ICar;\n\n  return car;\n};\n\nexport const startStopEngine = async (id: number, status: StatusEngine): Promise<IEngineAnswer> => {\n  const resp = await fetch(`${engine}?id=${id}&status=${status}`, {\n    method: 'PATCH',\n  });\n  const params = (await resp.json()) as IEngineAnswer;\n\n  return params;\n};\n\nexport const switchToDriveMode = async (id: number): Promise<{ success: boolean }> => {\n  const resp = await fetch(`${engine}?id=${id}&status=drive`, {\n    method: 'PATCH',\n  });\n  const result = (await resp.json()) as { success: boolean };\n\n  return result;\n};\n\nexport const getWinners = async (\n  page: number,\n  limit: number,\n  sort: Sort,\n  order: OrderSort,\n): Promise<IGetWinners> => {\n  const resp = await fetch(\n    `${winners}?_page=${page}&_limit=${limit}&_sort=${sort}&_order=${order}`,\n  );\n  const totalWinners = resp.headers.get('X-Total-Count') as string;\n  const arrWinners = (await resp.json()) as IWinner[];\n\n  return {\n    total: +totalWinners,\n    winners: arrWinners,\n  };\n};\n\nexport const getWinner = async (id: number): Promise<IWinner> => {\n  const resp = await fetch(`${winners}/${id}`);\n  const winner = (await resp.json()) as IWinner;\n\n  return winner;\n};\n\nexport const createWinner = async (id: number, wins: number, time: number): Promise<IWinner> => {\n  const data = {\n    id,\n    wins,\n    time,\n  };\n\n  const resp = await fetch(`${winners}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n  const winner = (await resp.json()) as IWinner;\n\n  return winner;\n};\n\nexport const deleteWinner = async (id: number): Promise<void> => {\n  const resp = await fetch(`${winners}/${id}`, {\n    method: 'DELETE',\n  });\n  await resp.json();\n};\n\nexport const updateWinner = async (id: number, wins: number, time: number): Promise<IWinner> => {\n  const data = {\n    wins,\n    time,\n  };\n\n  const resp = await fetch(`${winners}/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n  const winner = (await resp.json()) as IWinner;\n\n  return winner;\n};\n","enum NotificationClasses {\n  IsHidden = 'notification_is_hidden',\n  IsShown = 'notification_is_shown',\n}\n\nexport default class CustomNotification {\n  elem: HTMLElement;\n\n  constructor() {\n    this.elem = document.createElement('div');\n    this.elem.className = `notification ${NotificationClasses.IsHidden}`;\n  }\n\n  showNotification(): void {\n    this.elem.classList.remove(NotificationClasses.IsHidden);\n    this.elem.classList.add(NotificationClasses.IsShown);\n  }\n\n  closeNotification(): void {\n    this.elem.addEventListener('transitionend', this.hideNotification);\n    this.elem.classList.remove(NotificationClasses.IsShown);\n  }\n\n  hideNotification = (): void => {\n    this.elem.classList.add(NotificationClasses.IsHidden);\n  };\n\n  changeMessage(message: string): void {\n    this.elem.textContent = message;\n  }\n}\n","import serverNotification from '../components/server-notification';\nimport Car from '../components/car';\nimport header from '../components/header';\nimport {\n  getCars,\n  createCar,\n  createBundleCars,\n  updateCar,\n  deleteWinner,\n  deleteCar,\n  startStopEngine,\n  switchToDriveMode,\n  getWinner,\n  createWinner,\n  updateWinner,\n} from '../api/api';\nimport {\n  MAX_CARS_PER_PAGE,\n  IGetCars,\n  ISetCar,\n  ISetBtns,\n  START_PAGE,\n  NO_SELECT,\n  START_COLOR,\n  StatusEngine,\n  IWinner,\n  MAX_NUMBER_RACE,\n  NUMBER_IN_BUNDLE,\n  ONE_SECOND,\n  IEngineAnswer,\n} from '../data/data';\nimport getNewBtn, { BtnClasses } from '../components/btn';\nimport CustomNotification from '../components/notification';\nimport brandsCars from '../data/brands-cars';\nimport modelsCars from '../data/models-cars';\n\nexport default class GaragePage {\n  rootElem: HTMLElement;\n\n  rootPageElem?: HTMLElement;\n\n  setCreateCar?: ISetCar;\n\n  setUpdateCar?: ISetCar;\n\n  settingsBtns?: ISetBtns;\n\n  totalCars?: number;\n\n  totalCarsElem?: HTMLElement;\n\n  curPageNumber: number;\n\n  curPageNumberElem?: HTMLElement;\n\n  arrCars?: Car[];\n\n  selectCar: number;\n\n  btnPrev?: HTMLElement;\n\n  btnNext?: HTMLElement;\n\n  carsContainer?: HTMLElement;\n\n  carWinner?: number;\n\n  notification: CustomNotification;\n\n  isReset: boolean;\n\n  numberRace: number;\n\n  constructor(rootElem: HTMLElement) {\n    this.rootElem = rootElem;\n    this.curPageNumber = START_PAGE;\n    this.selectCar = NO_SELECT;\n    this.notification = new CustomNotification();\n    this.isReset = true;\n    this.numberRace = 0;\n  }\n\n  async initPage(): Promise<void> {\n    try {\n      const res = await getCars(START_PAGE, MAX_CARS_PER_PAGE);\n      this.generatePage(res);\n    } catch (err) {\n      if (err instanceof TypeError && err.message === 'Failed to fetch') {\n        serverNotification.showServerNotification();\n      }\n    }\n  }\n\n  generatePage(res: IGetCars): void {\n    this.rootPageElem = document.createElement('main');\n    this.rootPageElem.className = 'garage-page garage-page_margin_top';\n\n    const settings = this.getSettingsBlock();\n    const sectionCars = this.getSectionCars(res);\n\n    this.rootPageElem.append(settings, sectionCars);\n\n    this.showPage();\n  }\n\n  getSettingsBlock(): HTMLElement {\n    const settings = document.createElement('div');\n    settings.className = 'settings';\n\n    const setCreateCar = this.getSetCreateCar();\n    const dataList = this.getDataList();\n    setCreateCar.append(dataList);\n    const setUpdateCar = this.getSetUpdateCar();\n    const setControls = this.getSetControls();\n\n    settings.append(setCreateCar, setUpdateCar, setControls);\n\n    return settings;\n  }\n\n  getDataList = (): HTMLElement => {\n    const dataList = document.createElement('datalist');\n    dataList.id = 'data-list-cars';\n\n    for (let i = 0; i < brandsCars.length; i += 1) {\n      for (let j = 0; j < modelsCars.length; j += 1) {\n        const option = document.createElement('option');\n        option.value = `${brandsCars[i]} ${modelsCars[j]}`;\n\n        dataList.append(option);\n      }\n    }\n\n    return dataList;\n  };\n\n  getSetCreateCar(): HTMLElement {\n    const setCreateCar = document.createElement('div');\n    setCreateCar.className = 'settings__create-car control-panel';\n\n    this.setCreateCar = this.fillSetCar(\n      setCreateCar,\n      'Create',\n      this.handleClickCreateCar,\n      this.handleInputNameCreate,\n    );\n\n    return setCreateCar;\n  }\n\n  handleClickCreateCar = (): void => {\n    this.handleClickCreateCarPromise().catch((err: Error) => {\n      console.log(err);\n    });\n  };\n\n  handleClickCreateCarPromise = async (): Promise<void> => {\n    try {\n      const carName = (this.setCreateCar?.inputName as HTMLInputElement).value;\n      const carColor = (this.setCreateCar?.inputColor as HTMLInputElement).value;\n      const newCar = await createCar(carName, carColor);\n\n      (this.totalCars as number) += 1;\n      this.updateTotalCarsElem();\n\n      if ((this.arrCars as Car[]).length < MAX_CARS_PER_PAGE) {\n        const newCarElem = new Car(newCar.id, newCar.name, newCar.color);\n        this.arrCars?.push(newCarElem);\n        this.carsContainer?.append(newCarElem.car);\n      } else {\n        (this.btnNext as HTMLButtonElement).disabled = false;\n      }\n\n      (this.setCreateCar?.inputName as HTMLInputElement).value = '';\n      (this.setCreateCar?.inputColor as HTMLInputElement).value = START_COLOR;\n      ((this.setCreateCar as ISetCar).btn as HTMLButtonElement).disabled = true;\n    } catch {\n      console.log('error');\n    }\n  };\n\n  updateTotalCarsElem(): void {\n    (this.totalCarsElem as HTMLElement).textContent = this.totalCars?.toString() as string;\n  }\n\n  handleInputNameCreate = (): void => {\n    const btnCreate = this.setCreateCar?.btn as HTMLButtonElement;\n    if ((this.setCreateCar?.inputName as HTMLInputElement).value !== '') {\n      btnCreate.disabled = false;\n    } else {\n      btnCreate.disabled = true;\n    }\n  };\n\n  fillSetCar(\n    setCar: HTMLElement,\n    btnContent: string,\n    handleBtn: () => void,\n    handleInputName: () => void,\n  ): ISetCar {\n    const inputName = document.createElement('input');\n    inputName.className = 'input-car-name';\n    inputName.type = 'text';\n    inputName.name = 'car-name';\n    inputName.setAttribute('list', 'data-list-cars');\n    inputName.addEventListener('input', handleInputName);\n\n    const inputColor = document.createElement('input');\n    inputColor.className = 'input-color';\n    inputColor.type = 'color';\n    inputColor.name = 'car-color';\n    inputColor.value = START_COLOR;\n\n    const btn = getNewBtn(BtnClasses.Btn, btnContent, handleBtn, true);\n\n    setCar.append(inputName, inputColor, btn);\n\n    return {\n      inputName,\n      inputColor,\n      btn,\n    };\n  }\n\n  getSetUpdateCar(): HTMLElement {\n    const setUpdateCar = document.createElement('div');\n    setUpdateCar.className = 'settings__update-car control-panel';\n\n    this.setUpdateCar = this.fillSetCar(\n      setUpdateCar,\n      'Update',\n      this.handleClickUpdateCar,\n      this.handleInputNameUpdate,\n    );\n    (this.setUpdateCar.inputName as HTMLInputElement).disabled = true;\n    (this.setUpdateCar.inputColor as HTMLInputElement).disabled = true;\n\n    return setUpdateCar;\n  }\n\n  handleClickUpdateCar = (): void => {\n    this.handleClickUpdateCarPromise().catch((err: Error) => {\n      console.log(err);\n    });\n  };\n\n  handleClickUpdateCarPromise = async (): Promise<void> => {\n    try {\n      const inputName = this.setUpdateCar?.inputName as HTMLInputElement;\n      const inputColor = this.setUpdateCar?.inputColor as HTMLInputElement;\n      const curCar = this.getChoosenCarById(this.selectCar);\n\n      if (curCar && curCar.name === inputName.value && curCar.color === inputColor.value) {\n        this.resetSelectedCar();\n        return;\n      }\n\n      const updatedCar = await updateCar(this.selectCar, inputName.value, inputColor.value);\n\n      if (curCar) {\n        curCar.name = updatedCar.name;\n        curCar.color = updatedCar.color;\n        curCar.changeCarPictureColor();\n        curCar.changeNameCar();\n      }\n\n      this.resetSelectedCar();\n    } catch {\n      console.log('error');\n    }\n  };\n\n  getChoosenCarById(id: number) {\n    const filterArr = this.arrCars?.filter((car) => car.id === id) as Car[];\n    if (filterArr.length > 0) {\n      return filterArr[0];\n    }\n    return undefined;\n  }\n\n  handleInputNameUpdate = (): void => {\n    const btnUpdate = this.setUpdateCar?.btn as HTMLButtonElement;\n    if ((this.setUpdateCar?.inputName as HTMLInputElement).value !== '') {\n      btnUpdate.disabled = false;\n    } else {\n      btnUpdate.disabled = true;\n    }\n  };\n\n  getSetControls(): HTMLElement {\n    const setControls = document.createElement('div');\n    setControls.className = 'settings__controls control-panel';\n\n    const btnRace = getNewBtn(BtnClasses.MainBtn, 'Race', this.handleRace, false);\n    const btnReset = getNewBtn(BtnClasses.MainBtn, 'Reset', this.handleReset, true);\n    const btnGenerate = getNewBtn(BtnClasses.Btn, 'Generate cars', this.handleGenerateCars, false);\n\n    setControls.append(btnRace, btnReset, btnGenerate);\n\n    this.settingsBtns = {\n      btnRace,\n      btnReset,\n      btnGenerate,\n    };\n\n    return setControls;\n  }\n\n  handleRace = (): void => {\n    const endPos = Car.getAnimationEndPos((this.arrCars as Car[])[0]);\n    this.isReset = false;\n    this.numberRace += 1;\n    if (this.numberRace > MAX_NUMBER_RACE) {\n      this.numberRace = 0;\n    }\n    // make all buttons not active\n    (this.settingsBtns?.btnRace as HTMLButtonElement).disabled = true;\n    (this.settingsBtns?.btnReset as HTMLButtonElement).disabled = false;\n    (this.settingsBtns?.btnGenerate as HTMLButtonElement).disabled = true;\n    (this.setCreateCar?.inputName as HTMLInputElement).disabled = true;\n    (this.btnNext as HTMLButtonElement).disabled = true;\n    (this.btnPrev as HTMLButtonElement).disabled = true;\n    this.arrCars?.forEach((car) => {\n      const btnSelect = car.btnSelect as HTMLButtonElement;\n      btnSelect.disabled = true;\n      const btnRemove = car.btnRemove as HTMLButtonElement;\n      btnRemove.disabled = true;\n      const btnStartEngine = car.btnStartEngine as HTMLButtonElement;\n      btnStartEngine.disabled = true;\n\n      this.startRace(car, this.numberRace, endPos).catch((err: Error) => {\n        console.log(err);\n      });\n    });\n  };\n\n  startRace = async (car: Car, curNumberRace: number, endPos: string): Promise<void> => {\n    let params;\n    try {\n      if (!this.isReset && curNumberRace === this.numberRace) {\n        params = await startStopEngine(car.id, StatusEngine.Started);\n      } else {\n        return;\n      }\n    } catch {\n      return;\n    }\n\n    if (!this.isReset && curNumberRace === this.numberRace) {\n      car.setCarTime(params.distance / params.velocity);\n      car.setAnimation(endPos);\n      (car.animation as Animation).play();\n    } else return;\n\n    try {\n      let answer;\n      if (!this.isReset && curNumberRace === this.numberRace) {\n        answer = await switchToDriveMode(car.id);\n      } else {\n        return;\n      }\n\n      if (\n        this.carWinner === undefined &&\n        answer.success &&\n        !this.isReset &&\n        curNumberRace === this.numberRace\n      ) {\n        this.carWinner = car.id;\n        const message = `${car.name} went first [${((car.time as number) / 1000).toFixed(2)}s]`;\n\n        this.notification.changeMessage(message);\n        this.notification.showNotification();\n\n        // add winner to db\n        this.addWinnerToDB(car).catch((err: Error) => {\n          console.log(err);\n        });\n      }\n    } catch {\n      if (!this.isReset && curNumberRace === this.numberRace) {\n        console.log('Engine of', car.name, 'broke down');\n        (car.animation as Animation).pause();\n      }\n    }\n  };\n\n  addWinnerToDB = async (car: Car): Promise<void> => {\n    let winner: IWinner | undefined;\n    try {\n      winner = await getWinner(car.id);\n    } catch {\n      //\n    }\n\n    if (winner !== undefined && !Object.keys(winner).length) {\n      try {\n        await createWinner(car.id, 1, (car.time as number) / ONE_SECOND);\n      } catch {\n        console.log('error');\n      }\n    } else if (winner !== undefined) {\n      try {\n        const newWins = winner.wins + 1;\n        const newTime =\n          (car.time as number) / ONE_SECOND < winner.time\n            ? (car.time as number) / ONE_SECOND\n            : winner.time;\n        await updateWinner(car.id, newWins, newTime);\n      } catch {\n        console.log('error');\n      }\n    }\n  };\n\n  handleReset = (): void => {\n    this.handleResetPromise().catch((err: Error) => {\n      console.log(err);\n    });\n  };\n\n  handleResetPromise = async (): Promise<void> => {\n    (this.settingsBtns?.btnReset as HTMLButtonElement).disabled = true;\n    this.isReset = true;\n    try {\n      const promises = this.arrCars?.map((car) => startStopEngine(car.id, StatusEngine.Stopped));\n      await Promise.all(promises as Promise<IEngineAnswer>[]);\n\n      this.arrCars?.forEach((car) => {\n        car.animation?.cancel();\n      });\n    } catch {\n      console.log('error');\n    }\n\n    if (this.carWinner !== undefined) {\n      this.carWinner = undefined;\n      this.notification.closeNotification();\n    }\n\n    // make all buttons active again\n    (this.settingsBtns?.btnRace as HTMLButtonElement).disabled = false;\n    (this.settingsBtns?.btnGenerate as HTMLButtonElement).disabled = false;\n    (this.setCreateCar?.inputName as HTMLInputElement).disabled = false;\n    if (this.curPageNumber !== START_PAGE) {\n      (this.btnPrev as HTMLButtonElement).disabled = false;\n    }\n    if (!this.isOnLastPageNow()) {\n      (this.btnNext as HTMLButtonElement).disabled = false;\n    }\n    this.arrCars?.forEach((car) => {\n      const btnSelect = car.btnSelect as HTMLButtonElement;\n      btnSelect.disabled = false;\n      const btnRemove = car.btnRemove as HTMLButtonElement;\n      btnRemove.disabled = false;\n      const btnStartEngine = car.btnStartEngine as HTMLButtonElement;\n      btnStartEngine.disabled = false;\n    });\n  };\n\n  handleGenerateCars = (): void => {\n    this.handleGenerateCarsPromise().catch((err: Error) => {\n      console.log(err);\n    });\n  };\n\n  handleGenerateCarsPromise = async (): Promise<void> => {\n    try {\n      await createBundleCars();\n\n      (this.totalCars as number) += NUMBER_IN_BUNDLE;\n      this.updateTotalCarsElem();\n      (this.btnNext as HTMLButtonElement).disabled = false;\n\n      // update cars on cur page\n      if ((this.arrCars as Car[]).length < MAX_CARS_PER_PAGE) {\n        this.updateCarsOnCurPage().catch((err: Error) => {\n          console.log(err);\n        });\n      }\n    } catch {\n      console.log('error');\n    }\n  };\n\n  updateCarsOnCurPage = async (): Promise<void> => {\n    try {\n      const { cars } = await getCars(this.curPageNumber, MAX_CARS_PER_PAGE);\n      const { length } = this.arrCars as Car[];\n\n      for (let i = length; i < cars.length; i += 1) {\n        const newCar = new Car(cars[i].id, cars[i].name, cars[i].color);\n        this.arrCars?.push(newCar);\n        this.carsContainer?.append(newCar.car);\n      }\n\n      if (!(this.arrCars as Car[]).length) {\n        (this.settingsBtns?.btnRace as HTMLButtonElement).disabled = true;\n      } else {\n        (this.settingsBtns?.btnRace as HTMLButtonElement).disabled = false;\n      }\n    } catch (err) {\n      console.log('error', err);\n    }\n  };\n\n  getSectionCars(res: IGetCars): HTMLElement {\n    const sectionCars = document.createElement('section');\n    sectionCars.className = 'garage-page__cars';\n\n    const title = document.createElement('h1');\n    title.className = 'title';\n    this.totalCarsElem = document.createElement('span');\n    this.totalCars = res.total;\n    this.totalCarsElem.textContent = this.totalCars.toString();\n    title.append('Garage (', this.totalCarsElem, ')');\n\n    const subtitle = document.createElement('div');\n    subtitle.className = 'subtitle';\n    this.curPageNumberElem = document.createElement('span');\n    this.curPageNumberElem.textContent = this.curPageNumber.toString();\n    subtitle.append('Page #', this.curPageNumberElem);\n\n    this.fillCarsContainer(res);\n    const pagination = this.getPagination();\n\n    sectionCars.append(title, subtitle, this.carsContainer as HTMLElement, pagination);\n\n    return sectionCars;\n  }\n\n  fillCarsContainer(res: IGetCars) {\n    this.carsContainer = document.createElement('div');\n    this.carsContainer.className = 'garage-page__cars-container';\n    this.carsContainer.addEventListener('click', this.handleClickCarsContainer);\n\n    this.arrCars = res.cars.map((car) => new Car(car.id, car.name, car.color));\n\n    this.arrCars.forEach((car) => {\n      (this.carsContainer as HTMLElement).append(car.car);\n    });\n  }\n\n  getPagination(): HTMLElement {\n    const pagination = document.createElement('div');\n    pagination.className = 'control-panel';\n\n    this.btnPrev = getNewBtn(BtnClasses.Btn, 'Prev', this.handlePrevClick, true);\n    let btnNextDisabled = true;\n\n    if ((this.totalCars as number) > MAX_CARS_PER_PAGE) {\n      btnNextDisabled = false;\n    }\n    this.btnNext = getNewBtn(BtnClasses.Btn, 'Next', this.handleNextClick, btnNextDisabled);\n\n    pagination.append(this.btnPrev, this.btnNext);\n\n    return pagination;\n  }\n\n  handlePrevClick = (): void => {\n    this.curPageNumber -= 1;\n    this.updateNumberPage();\n    if (this.curPageNumber === START_PAGE) {\n      (this.btnPrev as HTMLButtonElement).disabled = true;\n    } else {\n      (this.btnPrev as HTMLButtonElement).disabled = false;\n    }\n    if (this.isOnLastPageNow()) {\n      (this.btnNext as HTMLButtonElement).disabled = true;\n    } else {\n      (this.btnNext as HTMLButtonElement).disabled = false;\n    }\n\n    this.showPrevNextPage().catch((err: Error) => {\n      console.log(err);\n    });\n  };\n\n  handleNextClick = (): void => {\n    this.curPageNumber += 1;\n    this.updateNumberPage();\n    if (this.isOnLastPageNow()) {\n      (this.btnNext as HTMLButtonElement).disabled = true;\n    } else {\n      (this.btnNext as HTMLButtonElement).disabled = false;\n    }\n    (this.btnPrev as HTMLButtonElement).disabled = false;\n\n    this.showPrevNextPage().catch((err: Error) => {\n      console.log(err);\n    });\n  };\n\n  isOnLastPageNow = (): boolean =>\n    this.curPageNumber === Math.ceil((this.totalCars as number) / MAX_CARS_PER_PAGE);\n\n  showPrevNextPage = async (): Promise<void> => {\n    (this.settingsBtns?.btnRace as HTMLButtonElement).disabled = false;\n    try {\n      const { cars } = await getCars(this.curPageNumber, MAX_CARS_PER_PAGE);\n\n      (this.carsContainer as HTMLElement).innerHTML = '';\n      this.arrCars = cars.map((car) => new Car(car.id, car.name, car.color));\n      this.arrCars.forEach((car) => {\n        this.carsContainer?.append(car.car);\n      });\n    } catch {\n      console.log('error');\n    }\n\n    (this.settingsBtns?.btnRace as HTMLButtonElement).disabled = false;\n  };\n\n  updateNumberPage(): void {\n    (this.curPageNumberElem as HTMLElement).textContent = this.curPageNumber.toString();\n  }\n\n  showPage(): void {\n    this.rootElem.textContent = '';\n    this.rootElem.append(header.header, this.rootPageElem as HTMLElement, this.notification.elem);\n  }\n\n  handleClickCarsContainer = (e: Event): void => {\n    const target = e.target as HTMLElement;\n    const btnSelect = target.closest('.btn-select');\n    const btnRemove = target.closest('.btn-remove');\n    const btnStartEngine = target.closest('.btn-start');\n    const btnStopEngine = target.closest('.btn-stop');\n    const curCar = target.closest('.car') as HTMLElement;\n\n    if (!btnSelect && !btnRemove && !btnStartEngine && !btnStopEngine) return;\n\n    let car: Car = (this.arrCars as Car[])[0];\n    let carInd = 0;\n    this.arrCars?.forEach((carItem, ind) => {\n      if (carItem.car === curCar) {\n        car = carItem;\n        carInd = ind;\n      }\n    });\n\n    if (btnSelect) {\n      this.handleSelectCar(car);\n    } else if (btnRemove) {\n      this.handleRemoveCar(car, carInd).catch((err: Error) => {\n        console.log(err);\n      });\n    } else if (btnStartEngine) {\n      this.handleStartCar(car, car.numberStart).catch((err: Error) => {\n        console.log(err);\n      });\n    } else {\n      this.handleStopCar(car).catch((err: Error) => {\n        console.log(err);\n      });\n    }\n  };\n\n  handleSelectCar(car: Car): void {\n    const inputName = this.setUpdateCar?.inputName as HTMLInputElement;\n    const inputColor = this.setUpdateCar?.inputColor as HTMLInputElement;\n\n    this.selectCar = car.id;\n\n    inputName.value = car.name;\n    inputColor.value = car.color;\n    inputName.disabled = false;\n    inputColor.disabled = false;\n    (this.setUpdateCar?.btn as HTMLButtonElement).disabled = false;\n  }\n\n  handleRemoveCar = async (car: Car, carInd: number): Promise<void> => {\n    try {\n      // check for chosen for update\n      if (this.selectCar === car.id) {\n        this.resetSelectedCar();\n      }\n\n      // check if this car is in winners db\n      await deleteWinner(car.id);\n    } catch {\n      console.log('error');\n    }\n\n    try {\n      await deleteCar(car.id);\n    } catch {\n      console.log('error');\n    }\n\n    this.arrCars = this.arrCars?.slice(0, carInd).concat(this.arrCars.slice(carInd + 1));\n\n    car.car.remove();\n    (this.totalCars as number) -= 1;\n    this.updateTotalCarsElem();\n\n    if (this.isOnLastPageNow()) {\n      (this.btnNext as HTMLButtonElement).disabled = true;\n    }\n    await this.updateCarsOnCurPage();\n  };\n\n  resetSelectedCar = (): void => {\n    const inputName = this.setUpdateCar?.inputName as HTMLInputElement;\n    const inputColor = this.setUpdateCar?.inputColor as HTMLInputElement;\n\n    inputName.value = '';\n    inputColor.value = START_COLOR;\n    inputName.disabled = true;\n    inputColor.disabled = true;\n    (this.setUpdateCar?.btn as HTMLButtonElement).disabled = true;\n\n    this.selectCar = NO_SELECT;\n  };\n\n  handleStartCar = async (car: Car, numberStart: number): Promise<void> => {\n    let params;\n    const endPos = Car.getAnimationEndPos(car);\n\n    car.setIsStopped(false);\n\n    (this.settingsBtns?.btnRace as HTMLButtonElement).disabled = true;\n    const btnRemove = car.btnRemove as HTMLButtonElement;\n    btnRemove.disabled = true;\n    try {\n      const btnStartEngine = car.btnStartEngine as HTMLButtonElement;\n      btnStartEngine.disabled = true;\n\n      params = await startStopEngine(car.id, StatusEngine.Started);\n    } catch {\n      return;\n    }\n\n    car.setCarTime(params.distance / params.velocity);\n    car.setAnimation(endPos);\n    (car.animation as Animation).play();\n\n    const btnStartEngine = car.btnStopEngine as HTMLButtonElement;\n    btnStartEngine.disabled = false;\n\n    try {\n      await switchToDriveMode(car.id);\n    } catch {\n      if (car.numberStart === numberStart) {\n        console.log('Engine of', car.name, 'broke down');\n        (car.animation as Animation).pause();\n      }\n    }\n  };\n\n  handleStopCar = async (car: Car): Promise<void> => {\n    const btnStopEngine = car.btnStopEngine as HTMLButtonElement;\n    btnStopEngine.disabled = true;\n    car.setIsStopped(true);\n    car.setNumberStart(car.numberStart + 1);\n    if (car.numberStart > MAX_NUMBER_RACE) {\n      car.setNumberStart(0);\n    }\n\n    try {\n      await startStopEngine(car.id, StatusEngine.Stopped);\n      (car.animation as Animation).cancel();\n    } catch {\n      console.log('error');\n    }\n\n    const btnStartEngine = car.btnStartEngine as HTMLButtonElement;\n    btnStartEngine.disabled = false;\n    const btnRemove = car.btnRemove as HTMLButtonElement;\n    btnRemove.disabled = false;\n\n    if (this.areAllCarsStopped()) {\n      (this.settingsBtns?.btnRace as HTMLButtonElement).disabled = false;\n    }\n  };\n\n  areAllCarsStopped = (): boolean =>\n    (this.arrCars as Car[]).every((car) => !(car.btnStartEngine as HTMLButtonElement).disabled);\n}\n","import { getCar, getWinners } from '../api/api';\nimport getNewBtn, { BtnClasses } from '../components/btn';\nimport { MAX_WINNERS_PER_PAGE, OrderSort, Sort, START_PAGE } from '../data/data';\nimport header from '../components/header';\nimport Car from '../components/car';\n\nexport default class WinnersPage {\n  rootElem: HTMLElement;\n\n  rootPageElem?: HTMLElement;\n\n  totalWin?: number;\n\n  totalWinElem?: HTMLElement;\n\n  curPageNumber: number;\n\n  curPageNumberElem?: HTMLElement;\n\n  btnPrev?: HTMLElement;\n\n  btnNext?: HTMLElement;\n\n  tbody?: HTMLElement;\n\n  typeSort: Sort;\n\n  orderSort: OrderSort;\n\n  trWinsElem?: HTMLElement;\n\n  trTimeElem?: HTMLElement;\n\n  constructor(rootElem: HTMLElement) {\n    this.rootElem = rootElem;\n    this.curPageNumber = START_PAGE;\n    this.typeSort = Sort.Id;\n    this.orderSort = OrderSort.Asc;\n\n    this.initPage();\n  }\n\n  initPage(): void {\n    this.generatePage();\n  }\n\n  generatePage(): void {\n    this.rootPageElem = document.createElement('main');\n    this.rootPageElem.className = 'winners-page winners-page_margin_top';\n\n    const title = this.getTitle();\n    const subtitle = this.getSubtitle();\n    const table = this.getTableSkeleton();\n    const pagination = this.getPagination();\n\n    this.rootPageElem.append(title, subtitle, table, pagination);\n  }\n\n  getTitle(): HTMLElement {\n    const title = document.createElement('h1');\n    title.className = 'title';\n\n    this.totalWinElem = document.createElement('span');\n    this.totalWinElem.textContent = this.totalWin?.toString() as string;\n\n    title.append('Winners (', this.totalWinElem, ')');\n\n    return title;\n  }\n\n  getSubtitle(): HTMLElement {\n    const subtitle = document.createElement('div');\n    subtitle.className = 'subtitle';\n\n    this.curPageNumberElem = document.createElement('span');\n    this.curPageNumberElem.textContent = this.curPageNumber.toString();\n\n    subtitle.append('Page #', this.curPageNumberElem);\n\n    return subtitle;\n  }\n\n  getTableSkeleton(): HTMLElement {\n    const table = document.createElement('table');\n    table.className = 'winners-page__table winners';\n\n    this.tbody = document.createElement('tbody');\n    const thead = document.createElement('thead');\n    const trHead = document.createElement('tr');\n    trHead.className = 'winners__header-tr header-tr';\n    trHead.innerHTML = `<th>Number</th>\n          <th>Car</th>\n          <th>Name</th>`;\n    this.trWinsElem = document.createElement('th');\n    this.trWinsElem.className = 'header-tr-wins';\n    this.trWinsElem.textContent = 'Wins';\n    this.trTimeElem = document.createElement('th');\n    this.trTimeElem.className = 'header-tr-time';\n    this.trTimeElem.textContent = 'Best time (seconds)';\n\n    trHead.append(this.trWinsElem, this.trTimeElem);\n    trHead.addEventListener('click', this.handleClickTrHead);\n\n    thead.append(trHead);\n\n    table.append(this.tbody, thead);\n\n    return table;\n  }\n\n  getPagination(): HTMLElement {\n    const pagination = document.createElement('div');\n    pagination.className = 'control-panel';\n\n    this.btnPrev = getNewBtn(BtnClasses.Btn, 'Prev', this.handleClickPrev, true);\n    this.btnNext = getNewBtn(BtnClasses.Btn, 'Next', this.handleClickNext, true);\n\n    pagination.append(this.btnPrev, this.btnNext);\n\n    return pagination;\n  }\n\n  handleClickTrHead = (e: Event): void => {\n    const target = e.target as HTMLElement;\n    const wins = target.closest('.header-tr-wins');\n    const time = target.closest('.header-tr-time');\n    if (!wins && !time) {\n      if (this.typeSort !== Sort.Id) {\n        this.typeSort = Sort.Id;\n        this.orderSort = OrderSort.Asc;\n        (this.trWinsElem as HTMLElement).className = 'header-tr-wins';\n        (this.trTimeElem as HTMLElement).className = 'header-tr-time';\n\n        this.fillWinners().catch((err: Error) => {\n          console.log(err);\n        });\n      }\n      return;\n    }\n\n    if (wins) {\n      switch (this.typeSort) {\n        case Sort.Id:\n          this.typeSort = Sort.Wins;\n          this.orderSort = OrderSort.Asc;\n          (this.trWinsElem as HTMLElement).className = 'header-tr-wins header-tr-wins_is_sort-asc';\n          break;\n\n        case Sort.Wins:\n          if (this.orderSort === OrderSort.Asc) {\n            this.orderSort = OrderSort.Desc;\n            (this.trWinsElem as HTMLElement).className =\n              'header-tr-wins header-tr-wins_is_sort-desc';\n          } else {\n            this.orderSort = OrderSort.Asc;\n            (this.trWinsElem as HTMLElement).className =\n              'header-tr-wins header-tr-wins_is_sort-asc';\n          }\n          break;\n\n        case Sort.Time:\n          (this.trTimeElem as HTMLElement).className = 'header-tr-time';\n          (this.trWinsElem as HTMLElement).className = 'header-tr-wins header-tr-wins_is_sort-asc';\n          this.typeSort = Sort.Wins;\n          this.orderSort = OrderSort.Asc;\n          break;\n\n        default:\n        //\n      }\n    } else {\n      switch (this.typeSort) {\n        case Sort.Id:\n          this.typeSort = Sort.Time;\n          this.orderSort = OrderSort.Asc;\n          (this.trTimeElem as HTMLElement).className = 'header-tr-time header-tr-time_is_sort-asc';\n          break;\n\n        case Sort.Wins:\n          (this.trWinsElem as HTMLElement).className = 'header-tr-wins';\n          (this.trTimeElem as HTMLElement).className = 'header-tr-time header-tr-time_is_sort-asc';\n          this.typeSort = Sort.Time;\n          this.orderSort = OrderSort.Asc;\n          break;\n\n        case Sort.Time:\n          if (this.orderSort === OrderSort.Asc) {\n            this.orderSort = OrderSort.Desc;\n            (this.trTimeElem as HTMLElement).className =\n              'header-tr-time header-tr-time_is_sort-desc';\n          } else {\n            this.orderSort = OrderSort.Asc;\n            (this.trTimeElem as HTMLElement).className =\n              'header-tr-time header-tr-time_is_sort-asc';\n          }\n          break;\n\n        default:\n        //\n      }\n    }\n\n    this.fillWinners().catch((err: Error) => {\n      console.log(err);\n    });\n  };\n\n  handleClickPrev = (): void => {\n    this.curPageNumber -= 1;\n    this.handleClickPrevNext();\n  };\n\n  handleClickNext = (): void => {\n    this.curPageNumber += 1;\n    this.handleClickPrevNext();\n  };\n\n  handleClickPrevNext = (): void => {\n    this.updateNumberPage();\n    this.updatePaginationButtons();\n    this.fillWinners().catch((e: Error) => {\n      console.log(e);\n    });\n  };\n\n  updatePaginationButtons(): void {\n    if (this.curPageNumber === START_PAGE) {\n      (this.btnPrev as HTMLButtonElement).disabled = true;\n    } else {\n      (this.btnPrev as HTMLButtonElement).disabled = false;\n    }\n    if (this.isOnLastPageNow()) {\n      (this.btnNext as HTMLButtonElement).disabled = true;\n    } else {\n      (this.btnNext as HTMLButtonElement).disabled = false;\n    }\n  }\n\n  showPage = async (): Promise<void> => {\n    this.rootElem.textContent = '';\n    this.rootElem.append(header.header, this.rootPageElem as HTMLElement);\n\n    await this.fillWinners();\n  };\n\n  fillWinners = async (): Promise<void> => {\n    (this.tbody as HTMLElement).innerHTML = '';\n\n    if (this.isCurPageNoLongerExists()) {\n      // in case we deleted some cars,\n      // and we don't have this page anymore\n      this.curPageNumber = START_PAGE;\n      this.updateNumberPage();\n    }\n\n    try {\n      const winners = await getWinners(\n        this.curPageNumber,\n        MAX_WINNERS_PER_PAGE,\n        this.typeSort,\n        this.orderSort,\n      );\n\n      this.totalWin = winners.total;\n      this.updateTotalWinElem();\n\n      const cars = await Promise.all(winners.winners.map((winner) => getCar(winner.id)));\n      const startInd = (this.curPageNumber - 1) * MAX_WINNERS_PER_PAGE + 1;\n      const countWin = winners.winners.length;\n\n      for (let i = 0; i < countWin; i += 1) {\n        const trWinner = document.createElement('tr');\n        let classCar = '';\n\n        if (Car.isCarColorTooLight(cars[i].color)) {\n          classCar = ' winner__car_is_dark';\n        }\n        trWinner.className = 'winner';\n        trWinner.innerHTML = `<td class=\"winner__number\">${startInd + i}</td>\n          <td class=\"winner__car${classCar}\">${Car.getCarPicture(cars[i].color)}</td>\n          <td class=\"winner__name\">${cars[i].name}</td>\n          <td class=\"winner__wins\">${winners.winners[i].wins}</td>\n          <td class=\"winner__time\">${winners.winners[i].time.toFixed(2)}</td>`;\n\n        this.tbody?.append(trWinner);\n      }\n    } catch {\n      console.log('error');\n    }\n\n    this.updatePaginationButtons();\n  };\n\n  updateNumberPage(): void {\n    (this.curPageNumberElem as HTMLElement).textContent = this.curPageNumber.toString();\n  }\n\n  updateTotalWinElem(): void {\n    (this.totalWinElem as HTMLElement).textContent = this.totalWin?.toString() as string;\n  }\n\n  isOnLastPageNow = (): boolean =>\n    this.curPageNumber === Math.ceil((this.totalWin as number) / MAX_WINNERS_PER_PAGE);\n\n  isCurPageNoLongerExists = (): boolean =>\n    this.curPageNumber > Math.ceil((this.totalWin as number) / MAX_WINNERS_PER_PAGE);\n}\n","import App from './app/app';\nimport './scss/all-styles.scss';\n\nconst app = new App();\napp.start();\n","import StartPage from '../pages/start-page';\nimport GaragePage from '../pages/garage-page';\nimport WinnersPage from '../pages/winners-page';\n\nexport default class App {\n  rootElem: HTMLElement;\n\n  startPage?: StartPage;\n\n  garagePage?: GaragePage;\n\n  winnersPage?: WinnersPage;\n\n  constructor() {\n    this.rootElem = document.createElement('div');\n    this.rootElem.className = 'app';\n    document.body.prepend(this.rootElem);\n\n    this.addListenersToDocument();\n  }\n\n  start(): void {\n    this.startPage = new StartPage(this.rootElem);\n    this.startPage.showPage();\n\n    this.garagePage = new GaragePage(this.rootElem);\n\n    this.winnersPage = new WinnersPage(this.rootElem);\n  }\n\n  initGaragePage = (): void => {\n    (this.garagePage as GaragePage).initPage().catch((err: Error) => {\n      console.log(err);\n    });\n  };\n\n  addListenersToDocument(): void {\n    document.addEventListener('init-garage-page', this.initGaragePage);\n    document.addEventListener('show-garage-page', this.showGaragePage);\n    document.addEventListener('show-winners-page', this.showWinnersPage);\n  }\n\n  showGaragePage = (): void => {\n    (this.garagePage as GaragePage).showPage();\n  };\n\n  showWinnersPage = (): void => {\n    (this.winnersPage as WinnersPage).showPage().catch((err: Error) => {\n      console.log(err);\n    });\n  };\n}\n"],"names":["BtnClasses","classStr","content","handleClick","disabledBtn","btn","document","createElement","className","textContent","addEventListener","disabled","ServNotClasses","constructor","closeServerNotification","this","elem","hideServerNotification","classList","remove","IsShown","add","IsHidden","innerHTML","getInnerLayout","showServerNotification","StartPage","rootElem","handleClickStart","event","Event","bubbles","btnStart","dispatchEvent","showPage","MainBtn","pageLayout","getPageLayout","append","main","pageTitle","StatusEngine","Sort","OrderSort","START_COLOR","MAX_NUMBER_RACE","ONE_SECOND","Car","id","name","color","car","numberStart","isStopped","carControls","getCarControls","setCarTrack","carTrackEl","controlPanel","btnSelect","SelectBtn","btnRemove","RemoveBtn","nameCarEl","setColorForCarTrackEl","carEngineBtnsBlock","getCarEngineBtnsBlock","carPictureEl","changeCarPictureColor","flagPicture","getFlagPicture","static","length","r","parseInt","slice","g","b","isCarColorTooLight","btnStartEngine","EngineStartBtn","btnStopEngine","EngineStopBtn","getCarPicture","changeNameCar","setAnimation","endPos","animation","animate","transform","duration","time","fill","bodyWidth","body","offsetWidth","sizeCar","getBoundingClientRect","left","width","setCarTime","setIsStopped","value","setNumberStart","handleClickGarage","btnGarage","btnWinners","handleClickWinners","header","nav","base","garage","engine","winners","getCars","page","limit","resp","fetch","total","headers","get","cars","json","createCar","data","method","JSON","stringify","getRandomIntInclusive","min","max","minInt","Math","ceil","maxInt","floor","random","generateRandomName","brandInd","modelInd","startStopEngine","status","switchToDriveMode","getWinners","sort","order","NotificationClasses","CustomNotification","hideNotification","showNotification","closeNotification","changeMessage","message","GaragePage","getDataList","dataList","i","j","option","handleClickCreateCar","handleClickCreateCarPromise","catch","err","console","log","carName","setCreateCar","inputName","carColor","inputColor","newCar","totalCars","updateTotalCarsElem","arrCars","newCarElem","push","carsContainer","btnNext","handleInputNameCreate","btnCreate","handleClickUpdateCar","handleClickUpdateCarPromise","setUpdateCar","curCar","getChoosenCarById","selectCar","resetSelectedCar","updatedCar","handleInputNameUpdate","btnUpdate","handleRace","getAnimationEndPos","isReset","numberRace","settingsBtns","btnRace","btnReset","btnGenerate","btnPrev","forEach","startRace","curNumberRace","params","Started","distance","velocity","play","answer","undefined","carWinner","success","toFixed","notification","addWinnerToDB","pause","winner","Object","keys","newWins","wins","newTime","updateWinner","createWinner","handleReset","handleResetPromise","promises","map","Stopped","Promise","all","cancel","curPageNumber","isOnLastPageNow","handleGenerateCars","handleGenerateCarsPromise","newCarName","newCarColor","toString","padStart","updateCarsOnCurPage","handlePrevClick","updateNumberPage","showPrevNextPage","handleNextClick","handleClickCarsContainer","e","target","closest","carInd","carItem","ind","handleSelectCar","handleRemoveCar","handleStartCar","handleStopCar","deleteCar","concat","areAllCarsStopped","every","initPage","res","generatePage","TypeError","rootPageElem","settings","getSettingsBlock","sectionCars","getSectionCars","getSetCreateCar","getSetUpdateCar","setControls","getSetControls","fillSetCar","totalCarsElem","setCar","btnContent","handleBtn","handleInputName","type","setAttribute","Btn","filterArr","filter","title","subtitle","curPageNumberElem","fillCarsContainer","pagination","getPagination","btnNextDisabled","WinnersPage","handleClickTrHead","typeSort","Id","Wins","orderSort","Asc","trWinsElem","Desc","Time","trTimeElem","fillWinners","handleClickPrev","handleClickPrevNext","handleClickNext","updatePaginationButtons","tbody","isCurPageNoLongerExists","totalWin","updateTotalWinElem","getCar","startInd","countWin","trWinner","classCar","getTitle","getSubtitle","table","getTableSkeleton","totalWinElem","thead","trHead","initGaragePage","garagePage","showGaragePage","showWinnersPage","winnersPage","prepend","addListenersToDocument","start","startPage"],"sourceRoot":""}